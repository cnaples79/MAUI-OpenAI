<div class="flex-grow p-4 overflow-auto">
    @foreach (var chat in Chats)
    {
        <div class="my-2 p-2 rounded-lg w-fit max-w-xl md:max-w-lg sm:max-w-md @GetMessageCssClass(chat.Role)">
            @if (chat.IsImage)
            {
                @if (chat.IsLoading)
                {
                    <div class="w-40 h-30 bg-gray-300 rounded-lg flex items-center justify-center">
                        <i class="fa fa-spinner custom-spin text-4xl text-gray-600"></i>
                    </div>
                }
                else
                {
                    <img src="data:image/png;base64,@chat.Message" alt="Generated Image" class="max-w-full h-auto rounded-lg cursor-pointer" @onclick='() => HandleImageClick("data:image/png;base64," + chat.Message)' />
                }
            }
            else
            {
                <p>@chat.Message</p>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public List<ChatMessageModel> Chats { get; set; } = new List<ChatMessageModel>();

    [Parameter]
    public EventCallback<string> OnImageClick { get; set; }

    private string GetMessageCssClass(string role)
    {
        return role == "user" ? "bg-blue text-brightWhite self-end ml-auto text-right" : "bg-green text-brightWhite self-start mr-auto text-left";
    }

    private async Task HandleImageClick(string imageSrc)
    {
        if (OnImageClick.HasDelegate)
        {
            await OnImageClick.InvokeAsync(imageSrc);
        }
    }
}
